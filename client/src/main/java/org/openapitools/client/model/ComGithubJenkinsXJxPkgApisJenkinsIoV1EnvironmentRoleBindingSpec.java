/*
 * Jenkins X
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentFilter;
import org.openapitools.client.model.IoK8sApiRbacV1RoleRef;
import org.openapitools.client.model.IoK8sApiRbacV1Subject;

/**
 * EnvironmentRoleBindingSpec is the specification of an EnvironmentRoleBinding
 */
@ApiModel(description = "EnvironmentRoleBindingSpec is the specification of an EnvironmentRoleBinding")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-03-28T12:38:15.775957Z[Europe/London]")
public class ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec {
  public static final String SERIALIZED_NAME_ENVIRONMENTS = "environments";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENTS)
  private List<ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentFilter> environments = null;

  public static final String SERIALIZED_NAME_ROLE_REF = "roleRef";
  @SerializedName(SERIALIZED_NAME_ROLE_REF)
  private IoK8sApiRbacV1RoleRef roleRef = null;

  public static final String SERIALIZED_NAME_SUBJECTS = "subjects";
  @SerializedName(SERIALIZED_NAME_SUBJECTS)
  private List<IoK8sApiRbacV1Subject> subjects = new ArrayList<IoK8sApiRbacV1Subject>();

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec environments(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentFilter> environments) {
    this.environments = environments;
    return this;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec addEnvironmentsItem(ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentFilter environmentsItem) {
    if (this.environments == null) {
      this.environments = new ArrayList<ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentFilter>();
    }
    this.environments.add(environmentsItem);
    return this;
  }

   /**
   * specifies which sets of environments this binding applies to
   * @return environments
  **/
  @ApiModelProperty(value = "specifies which sets of environments this binding applies to")
  public List<ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentFilter> getEnvironments() {
    return environments;
  }

  public void setEnvironments(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentFilter> environments) {
    this.environments = environments;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec roleRef(IoK8sApiRbacV1RoleRef roleRef) {
    this.roleRef = roleRef;
    return this;
  }

   /**
   * Get roleRef
   * @return roleRef
  **/
  @ApiModelProperty(required = true, value = "")
  public IoK8sApiRbacV1RoleRef getRoleRef() {
    return roleRef;
  }

  public void setRoleRef(IoK8sApiRbacV1RoleRef roleRef) {
    this.roleRef = roleRef;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec subjects(List<IoK8sApiRbacV1Subject> subjects) {
    this.subjects = subjects;
    return this;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec addSubjectsItem(IoK8sApiRbacV1Subject subjectsItem) {
    this.subjects.add(subjectsItem);
    return this;
  }

   /**
   * Subjects holds references to the objects the role applies to.
   * @return subjects
  **/
  @ApiModelProperty(required = true, value = "Subjects holds references to the objects the role applies to.")
  public List<IoK8sApiRbacV1Subject> getSubjects() {
    return subjects;
  }

  public void setSubjects(List<IoK8sApiRbacV1Subject> subjects) {
    this.subjects = subjects;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec comGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec = (ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec) o;
    return Objects.equals(this.environments, comGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec.environments) &&
        Objects.equals(this.roleRef, comGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec.roleRef) &&
        Objects.equals(this.subjects, comGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec.subjects);
  }

  @Override
  public int hashCode() {
    return Objects.hash(environments, roleRef, subjects);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentRoleBindingSpec {\n");
    
    sb.append("    environments: ").append(toIndentedString(environments)).append("\n");
    sb.append("    roleRef: ").append(toIndentedString(roleRef)).append("\n");
    sb.append("    subjects: ").append(toIndentedString(subjects)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

