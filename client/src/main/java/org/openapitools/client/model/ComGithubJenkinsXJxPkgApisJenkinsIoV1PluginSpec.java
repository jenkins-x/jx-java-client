/*
 * Jenkins X
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ComGithubJenkinsXJxPkgApisJenkinsIoV1Binary;

/**
 * PluginSpec provides details of a binary plugin available for a team
 */
@ApiModel(description = "PluginSpec provides details of a binary plugin available for a team")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-03-28T12:38:15.775957Z[Europe/London]")
public class ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec {
  public static final String SERIALIZED_NAME_BINARIES = "binaries";
  @SerializedName(SERIALIZED_NAME_BINARIES)
  private List<ComGithubJenkinsXJxPkgApisJenkinsIoV1Binary> binaries = null;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_GROUP = "group";
  @SerializedName(SERIALIZED_NAME_GROUP)
  private String group;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SUB_COMMAND = "subCommand";
  @SerializedName(SERIALIZED_NAME_SUB_COMMAND)
  private String subCommand;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec binaries(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1Binary> binaries) {
    this.binaries = binaries;
    return this;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec addBinariesItem(ComGithubJenkinsXJxPkgApisJenkinsIoV1Binary binariesItem) {
    if (this.binaries == null) {
      this.binaries = new ArrayList<ComGithubJenkinsXJxPkgApisJenkinsIoV1Binary>();
    }
    this.binaries.add(binariesItem);
    return this;
  }

   /**
   * Get binaries
   * @return binaries
  **/
  @ApiModelProperty(value = "")
  public List<ComGithubJenkinsXJxPkgApisJenkinsIoV1Binary> getBinaries() {
    return binaries;
  }

  public void setBinaries(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1Binary> binaries) {
    this.binaries = binaries;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec group(String group) {
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @ApiModelProperty(value = "")
  public String getGroup() {
    return group;
  }

  public void setGroup(String group) {
    this.group = group;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec subCommand(String subCommand) {
    this.subCommand = subCommand;
    return this;
  }

   /**
   * Get subCommand
   * @return subCommand
  **/
  @ApiModelProperty(value = "")
  public String getSubCommand() {
    return subCommand;
  }

  public void setSubCommand(String subCommand) {
    this.subCommand = subCommand;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(value = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec comGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec = (ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec) o;
    return Objects.equals(this.binaries, comGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec.binaries) &&
        Objects.equals(this.description, comGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec.description) &&
        Objects.equals(this.group, comGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec.group) &&
        Objects.equals(this.name, comGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec.name) &&
        Objects.equals(this.subCommand, comGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec.subCommand) &&
        Objects.equals(this.version, comGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(binaries, description, group, name, subCommand, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubJenkinsXJxPkgApisJenkinsIoV1PluginSpec {\n");
    
    sb.append("    binaries: ").append(toIndentedString(binaries)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    subCommand: ").append(toIndentedString(subCommand)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

