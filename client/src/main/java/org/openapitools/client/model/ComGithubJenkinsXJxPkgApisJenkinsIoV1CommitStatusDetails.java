/*
 * Jenkins X
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusCommitReference;
import org.openapitools.client.model.ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusItem;
import org.openapitools.client.model.ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference;

/**
 * ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-03-28T12:38:15.775957Z[Europe/London]")
public class ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails {
  public static final String SERIALIZED_NAME_ITEMS = "Items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusItem> items = null;

  public static final String SERIALIZED_NAME_CHECKED = "checked";
  @SerializedName(SERIALIZED_NAME_CHECKED)
  private Boolean checked;

  public static final String SERIALIZED_NAME_COMMIT = "commit";
  @SerializedName(SERIALIZED_NAME_COMMIT)
  private ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusCommitReference commit = null;

  public static final String SERIALIZED_NAME_CONTEXT = "context";
  @SerializedName(SERIALIZED_NAME_CONTEXT)
  private String context;

  public static final String SERIALIZED_NAME_PIPELINE_ACTIVITY = "pipelineActivity";
  @SerializedName(SERIALIZED_NAME_PIPELINE_ACTIVITY)
  private ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference pipelineActivity = null;

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails items(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusItem> items) {
    this.items = items;
    return this;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails addItemsItem(ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusItem>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Get items
   * @return items
  **/
  @ApiModelProperty(value = "")
  public List<ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusItem> getItems() {
    return items;
  }

  public void setItems(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusItem> items) {
    this.items = items;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails checked(Boolean checked) {
    this.checked = checked;
    return this;
  }

   /**
   * Get checked
   * @return checked
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getChecked() {
    return checked;
  }

  public void setChecked(Boolean checked) {
    this.checked = checked;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails commit(ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusCommitReference commit) {
    this.commit = commit;
    return this;
  }

   /**
   * Get commit
   * @return commit
  **/
  @ApiModelProperty(required = true, value = "")
  public ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusCommitReference getCommit() {
    return commit;
  }

  public void setCommit(ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusCommitReference commit) {
    this.commit = commit;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails context(String context) {
    this.context = context;
    return this;
  }

   /**
   * Get context
   * @return context
  **/
  @ApiModelProperty(required = true, value = "")
  public String getContext() {
    return context;
  }

  public void setContext(String context) {
    this.context = context;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails pipelineActivity(ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference pipelineActivity) {
    this.pipelineActivity = pipelineActivity;
    return this;
  }

   /**
   * Get pipelineActivity
   * @return pipelineActivity
  **/
  @ApiModelProperty(required = true, value = "")
  public ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference getPipelineActivity() {
    return pipelineActivity;
  }

  public void setPipelineActivity(ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference pipelineActivity) {
    this.pipelineActivity = pipelineActivity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails comGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails = (ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails) o;
    return Objects.equals(this.items, comGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails.items) &&
        Objects.equals(this.checked, comGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails.checked) &&
        Objects.equals(this.commit, comGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails.commit) &&
        Objects.equals(this.context, comGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails.context) &&
        Objects.equals(this.pipelineActivity, comGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails.pipelineActivity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(items, checked, commit, context, pipelineActivity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitStatusDetails {\n");
    
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    checked: ").append(toIndentedString(checked)).append("\n");
    sb.append("    commit: ").append(toIndentedString(commit)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    pipelineActivity: ").append(toIndentedString(pipelineActivity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

