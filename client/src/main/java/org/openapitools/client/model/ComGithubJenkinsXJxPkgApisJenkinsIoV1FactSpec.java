/*
 * Jenkins X
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ComGithubJenkinsXJxPkgApisJenkinsIoV1Measurement;
import org.openapitools.client.model.ComGithubJenkinsXJxPkgApisJenkinsIoV1Original;
import org.openapitools.client.model.ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference;
import org.openapitools.client.model.ComGithubJenkinsXJxPkgApisJenkinsIoV1Statement;

/**
 * FactSpec is the specification of a Fact
 */
@ApiModel(description = "FactSpec is the specification of a Fact")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-03-28T12:38:15.775957Z[Europe/London]")
public class ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec {
  public static final String SERIALIZED_NAME_FACT_TYPE = "factType";
  @SerializedName(SERIALIZED_NAME_FACT_TYPE)
  private String factType;

  public static final String SERIALIZED_NAME_MEASUREMENTS = "measurements";
  @SerializedName(SERIALIZED_NAME_MEASUREMENTS)
  private List<ComGithubJenkinsXJxPkgApisJenkinsIoV1Measurement> measurements = null;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ORIGINAL = "original";
  @SerializedName(SERIALIZED_NAME_ORIGINAL)
  private ComGithubJenkinsXJxPkgApisJenkinsIoV1Original original = null;

  public static final String SERIALIZED_NAME_STATEMENTS = "statements";
  @SerializedName(SERIALIZED_NAME_STATEMENTS)
  private List<ComGithubJenkinsXJxPkgApisJenkinsIoV1Statement> statements = null;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference subject = null;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec factType(String factType) {
    this.factType = factType;
    return this;
  }

   /**
   * Get factType
   * @return factType
  **/
  @ApiModelProperty(required = true, value = "")
  public String getFactType() {
    return factType;
  }

  public void setFactType(String factType) {
    this.factType = factType;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec measurements(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1Measurement> measurements) {
    this.measurements = measurements;
    return this;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec addMeasurementsItem(ComGithubJenkinsXJxPkgApisJenkinsIoV1Measurement measurementsItem) {
    if (this.measurements == null) {
      this.measurements = new ArrayList<ComGithubJenkinsXJxPkgApisJenkinsIoV1Measurement>();
    }
    this.measurements.add(measurementsItem);
    return this;
  }

   /**
   * Get measurements
   * @return measurements
  **/
  @ApiModelProperty(value = "")
  public List<ComGithubJenkinsXJxPkgApisJenkinsIoV1Measurement> getMeasurements() {
    return measurements;
  }

  public void setMeasurements(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1Measurement> measurements) {
    this.measurements = measurements;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec original(ComGithubJenkinsXJxPkgApisJenkinsIoV1Original original) {
    this.original = original;
    return this;
  }

   /**
   * Get original
   * @return original
  **/
  @ApiModelProperty(value = "")
  public ComGithubJenkinsXJxPkgApisJenkinsIoV1Original getOriginal() {
    return original;
  }

  public void setOriginal(ComGithubJenkinsXJxPkgApisJenkinsIoV1Original original) {
    this.original = original;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec statements(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1Statement> statements) {
    this.statements = statements;
    return this;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec addStatementsItem(ComGithubJenkinsXJxPkgApisJenkinsIoV1Statement statementsItem) {
    if (this.statements == null) {
      this.statements = new ArrayList<ComGithubJenkinsXJxPkgApisJenkinsIoV1Statement>();
    }
    this.statements.add(statementsItem);
    return this;
  }

   /**
   * Get statements
   * @return statements
  **/
  @ApiModelProperty(value = "")
  public List<ComGithubJenkinsXJxPkgApisJenkinsIoV1Statement> getStatements() {
    return statements;
  }

  public void setStatements(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1Statement> statements) {
    this.statements = statements;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec subject(ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @ApiModelProperty(required = true, value = "")
  public ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference getSubject() {
    return subject;
  }

  public void setSubject(ComGithubJenkinsXJxPkgApisJenkinsIoV1ResourceReference subject) {
    this.subject = subject;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec comGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec = (ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec) o;
    return Objects.equals(this.factType, comGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec.factType) &&
        Objects.equals(this.measurements, comGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec.measurements) &&
        Objects.equals(this.name, comGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec.name) &&
        Objects.equals(this.original, comGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec.original) &&
        Objects.equals(this.statements, comGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec.statements) &&
        Objects.equals(this.subject, comGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec.subject) &&
        Objects.equals(this.tags, comGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(factType, measurements, name, original, statements, subject, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubJenkinsXJxPkgApisJenkinsIoV1FactSpec {\n");
    
    sb.append("    factType: ").append(toIndentedString(factType)).append("\n");
    sb.append("    measurements: ").append(toIndentedString(measurements)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    original: ").append(toIndentedString(original)).append("\n");
    sb.append("    statements: ").append(toIndentedString(statements)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

