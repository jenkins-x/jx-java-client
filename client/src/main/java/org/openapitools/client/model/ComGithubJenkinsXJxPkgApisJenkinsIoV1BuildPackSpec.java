/*
 * Jenkins X
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation;

/**
 * BuildPackSpec is the specification of an BuildPack
 */
@ApiModel(description = "BuildPackSpec is the specification of an BuildPack")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-03-28T12:38:15.775957Z[Europe/London]")
public class ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec {
  public static final String SERIALIZED_NAME_GIT_REF = "gitRef";
  @SerializedName(SERIALIZED_NAME_GIT_REF)
  private String gitRef;

  public static final String SERIALIZED_NAME_GIT_URL = "gitUrl";
  @SerializedName(SERIALIZED_NAME_GIT_URL)
  private String gitUrl;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_QUICKSTART_LOCATIONS = "quickstartLocations";
  @SerializedName(SERIALIZED_NAME_QUICKSTART_LOCATIONS)
  private List<ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation> quickstartLocations = null;

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec gitRef(String gitRef) {
    this.gitRef = gitRef;
    return this;
  }

   /**
   * Get gitRef
   * @return gitRef
  **/
  @ApiModelProperty(value = "")
  public String getGitRef() {
    return gitRef;
  }

  public void setGitRef(String gitRef) {
    this.gitRef = gitRef;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec gitUrl(String gitUrl) {
    this.gitUrl = gitUrl;
    return this;
  }

   /**
   * Get gitUrl
   * @return gitUrl
  **/
  @ApiModelProperty(value = "")
  public String getGitUrl() {
    return gitUrl;
  }

  public void setGitUrl(String gitUrl) {
    this.gitUrl = gitUrl;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @ApiModelProperty(value = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec quickstartLocations(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation> quickstartLocations) {
    this.quickstartLocations = quickstartLocations;
    return this;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec addQuickstartLocationsItem(ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation quickstartLocationsItem) {
    if (this.quickstartLocations == null) {
      this.quickstartLocations = new ArrayList<ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation>();
    }
    this.quickstartLocations.add(quickstartLocationsItem);
    return this;
  }

   /**
   * Get quickstartLocations
   * @return quickstartLocations
  **/
  @ApiModelProperty(value = "")
  public List<ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation> getQuickstartLocations() {
    return quickstartLocations;
  }

  public void setQuickstartLocations(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation> quickstartLocations) {
    this.quickstartLocations = quickstartLocations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec comGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec = (ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec) o;
    return Objects.equals(this.gitRef, comGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec.gitRef) &&
        Objects.equals(this.gitUrl, comGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec.gitUrl) &&
        Objects.equals(this.label, comGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec.label) &&
        Objects.equals(this.quickstartLocations, comGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec.quickstartLocations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gitRef, gitUrl, label, quickstartLocations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubJenkinsXJxPkgApisJenkinsIoV1BuildPackSpec {\n");
    
    sb.append("    gitRef: ").append(toIndentedString(gitRef)).append("\n");
    sb.append("    gitUrl: ").append(toIndentedString(gitUrl)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    quickstartLocations: ").append(toIndentedString(quickstartLocations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

