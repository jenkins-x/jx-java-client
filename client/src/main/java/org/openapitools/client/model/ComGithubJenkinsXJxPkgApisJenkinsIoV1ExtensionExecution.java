/*
 * Jenkins X
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentVariable;

/**
 * ExtensionExecution is an executable instance of an extension which can be attached into a pipeline for later execution. It differs from an Extension as it cannot have children and parameters have been resolved to environment variables
 */
@ApiModel(description = "ExtensionExecution is an executable instance of an extension which can be attached into a pipeline for later execution. It differs from an Extension as it cannot have children and parameters have been resolved to environment variables")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-03-28T12:38:15.775957Z[Europe/London]")
public class ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENVIRONMENT_VARIABLES = "environmentVariables";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_VARIABLES)
  private List<ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentVariable> environmentVariables = null;

  public static final String SERIALIZED_NAME_GIVEN = "given";
  @SerializedName(SERIALIZED_NAME_GIVEN)
  private String given;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_SCRIPT = "script";
  @SerializedName(SERIALIZED_NAME_SCRIPT)
  private String script;

  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private String uuid;

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution environmentVariables(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentVariable> environmentVariables) {
    this.environmentVariables = environmentVariables;
    return this;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution addEnvironmentVariablesItem(ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentVariable environmentVariablesItem) {
    if (this.environmentVariables == null) {
      this.environmentVariables = new ArrayList<ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentVariable>();
    }
    this.environmentVariables.add(environmentVariablesItem);
    return this;
  }

   /**
   * Get environmentVariables
   * @return environmentVariables
  **/
  @ApiModelProperty(value = "")
  public List<ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentVariable> getEnvironmentVariables() {
    return environmentVariables;
  }

  public void setEnvironmentVariables(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1EnvironmentVariable> environmentVariables) {
    this.environmentVariables = environmentVariables;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution given(String given) {
    this.given = given;
    return this;
  }

   /**
   * Get given
   * @return given
  **/
  @ApiModelProperty(value = "")
  public String getGiven() {
    return given;
  }

  public void setGiven(String given) {
    this.given = given;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution namespace(String namespace) {
    this.namespace = namespace;
    return this;
  }

   /**
   * Get namespace
   * @return namespace
  **/
  @ApiModelProperty(value = "")
  public String getNamespace() {
    return namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution script(String script) {
    this.script = script;
    return this;
  }

   /**
   * Get script
   * @return script
  **/
  @ApiModelProperty(value = "")
  public String getScript() {
    return script;
  }

  public void setScript(String script) {
    this.script = script;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @ApiModelProperty(value = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution comGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution = (ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution) o;
    return Objects.equals(this.description, comGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution.description) &&
        Objects.equals(this.environmentVariables, comGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution.environmentVariables) &&
        Objects.equals(this.given, comGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution.given) &&
        Objects.equals(this.name, comGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution.name) &&
        Objects.equals(this.namespace, comGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution.namespace) &&
        Objects.equals(this.script, comGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution.script) &&
        Objects.equals(this.uuid, comGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, environmentVariables, given, name, namespace, script, uuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    environmentVariables: ").append(toIndentedString(environmentVariables)).append("\n");
    sb.append("    given: ").append(toIndentedString(given)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    script: ").append(toIndentedString(script)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

