/*
 * Jenkins X
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ComGithubJenkinsXJxPkgApisJenkinsIoV1Attachment;
import org.openapitools.client.model.ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution;
import org.openapitools.client.model.ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStep;
import org.threeten.bp.OffsetDateTime;

/**
 * PipelineActivitySpec is the specification of the pipeline activity
 */
@ApiModel(description = "PipelineActivitySpec is the specification of the pipeline activity")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-03-28T12:38:15.775957Z[Europe/London]")
public class ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec {
  public static final String SERIALIZED_NAME_ATTACHMENTS = "attachments";
  @SerializedName(SERIALIZED_NAME_ATTACHMENTS)
  private List<ComGithubJenkinsXJxPkgApisJenkinsIoV1Attachment> attachments = null;

  public static final String SERIALIZED_NAME_BUILD = "build";
  @SerializedName(SERIALIZED_NAME_BUILD)
  private String build;

  public static final String SERIALIZED_NAME_BUILD_LOGS_URL = "buildLogsUrl";
  @SerializedName(SERIALIZED_NAME_BUILD_LOGS_URL)
  private String buildLogsUrl;

  public static final String SERIALIZED_NAME_BUILD_URL = "buildUrl";
  @SerializedName(SERIALIZED_NAME_BUILD_URL)
  private String buildUrl;

  public static final String SERIALIZED_NAME_COMPLETED_TIMESTAMP = "completedTimestamp";
  @SerializedName(SERIALIZED_NAME_COMPLETED_TIMESTAMP)
  private OffsetDateTime completedTimestamp;

  public static final String SERIALIZED_NAME_GIT_BRANCH = "gitBranch";
  @SerializedName(SERIALIZED_NAME_GIT_BRANCH)
  private String gitBranch;

  public static final String SERIALIZED_NAME_GIT_OWNER = "gitOwner";
  @SerializedName(SERIALIZED_NAME_GIT_OWNER)
  private String gitOwner;

  public static final String SERIALIZED_NAME_GIT_REPOSITORY = "gitRepository";
  @SerializedName(SERIALIZED_NAME_GIT_REPOSITORY)
  private String gitRepository;

  public static final String SERIALIZED_NAME_GIT_URL = "gitUrl";
  @SerializedName(SERIALIZED_NAME_GIT_URL)
  private String gitUrl;

  public static final String SERIALIZED_NAME_LAST_COMMIT_MESSAGE = "lastCommitMessage";
  @SerializedName(SERIALIZED_NAME_LAST_COMMIT_MESSAGE)
  private String lastCommitMessage;

  public static final String SERIALIZED_NAME_LAST_COMMIT_S_H_A = "lastCommitSHA";
  @SerializedName(SERIALIZED_NAME_LAST_COMMIT_S_H_A)
  private String lastCommitSHA;

  public static final String SERIALIZED_NAME_LAST_COMMIT_U_R_L = "lastCommitURL";
  @SerializedName(SERIALIZED_NAME_LAST_COMMIT_U_R_L)
  private String lastCommitURL;

  public static final String SERIALIZED_NAME_PIPELINE = "pipeline";
  @SerializedName(SERIALIZED_NAME_PIPELINE)
  private String pipeline;

  public static final String SERIALIZED_NAME_POST_EXTENSIONS = "postExtensions";
  @SerializedName(SERIALIZED_NAME_POST_EXTENSIONS)
  private List<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution> postExtensions = null;

  public static final String SERIALIZED_NAME_RELEASE_NOTES_U_R_L = "releaseNotesURL";
  @SerializedName(SERIALIZED_NAME_RELEASE_NOTES_U_R_L)
  private String releaseNotesURL;

  public static final String SERIALIZED_NAME_STARTED_TIMESTAMP = "startedTimestamp";
  @SerializedName(SERIALIZED_NAME_STARTED_TIMESTAMP)
  private OffsetDateTime startedTimestamp;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STEPS = "steps";
  @SerializedName(SERIALIZED_NAME_STEPS)
  private List<ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStep> steps = null;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_WORKFLOW = "workflow";
  @SerializedName(SERIALIZED_NAME_WORKFLOW)
  private String workflow;

  public static final String SERIALIZED_NAME_WORKFLOW_MESSAGE = "workflowMessage";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_MESSAGE)
  private String workflowMessage;

  public static final String SERIALIZED_NAME_WORKFLOW_STATUS = "workflowStatus";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_STATUS)
  private String workflowStatus;

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec attachments(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1Attachment> attachments) {
    this.attachments = attachments;
    return this;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec addAttachmentsItem(ComGithubJenkinsXJxPkgApisJenkinsIoV1Attachment attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<ComGithubJenkinsXJxPkgApisJenkinsIoV1Attachment>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @ApiModelProperty(value = "")
  public List<ComGithubJenkinsXJxPkgApisJenkinsIoV1Attachment> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1Attachment> attachments) {
    this.attachments = attachments;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec build(String build) {
    this.build = build;
    return this;
  }

   /**
   * Get build
   * @return build
  **/
  @ApiModelProperty(value = "")
  public String getBuild() {
    return build;
  }

  public void setBuild(String build) {
    this.build = build;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec buildLogsUrl(String buildLogsUrl) {
    this.buildLogsUrl = buildLogsUrl;
    return this;
  }

   /**
   * Get buildLogsUrl
   * @return buildLogsUrl
  **/
  @ApiModelProperty(value = "")
  public String getBuildLogsUrl() {
    return buildLogsUrl;
  }

  public void setBuildLogsUrl(String buildLogsUrl) {
    this.buildLogsUrl = buildLogsUrl;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec buildUrl(String buildUrl) {
    this.buildUrl = buildUrl;
    return this;
  }

   /**
   * Get buildUrl
   * @return buildUrl
  **/
  @ApiModelProperty(value = "")
  public String getBuildUrl() {
    return buildUrl;
  }

  public void setBuildUrl(String buildUrl) {
    this.buildUrl = buildUrl;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec completedTimestamp(OffsetDateTime completedTimestamp) {
    this.completedTimestamp = completedTimestamp;
    return this;
  }

   /**
   * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
   * @return completedTimestamp
  **/
  @ApiModelProperty(value = "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.")
  public OffsetDateTime getCompletedTimestamp() {
    return completedTimestamp;
  }

  public void setCompletedTimestamp(OffsetDateTime completedTimestamp) {
    this.completedTimestamp = completedTimestamp;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec gitBranch(String gitBranch) {
    this.gitBranch = gitBranch;
    return this;
  }

   /**
   * Get gitBranch
   * @return gitBranch
  **/
  @ApiModelProperty(value = "")
  public String getGitBranch() {
    return gitBranch;
  }

  public void setGitBranch(String gitBranch) {
    this.gitBranch = gitBranch;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec gitOwner(String gitOwner) {
    this.gitOwner = gitOwner;
    return this;
  }

   /**
   * Get gitOwner
   * @return gitOwner
  **/
  @ApiModelProperty(value = "")
  public String getGitOwner() {
    return gitOwner;
  }

  public void setGitOwner(String gitOwner) {
    this.gitOwner = gitOwner;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec gitRepository(String gitRepository) {
    this.gitRepository = gitRepository;
    return this;
  }

   /**
   * Get gitRepository
   * @return gitRepository
  **/
  @ApiModelProperty(value = "")
  public String getGitRepository() {
    return gitRepository;
  }

  public void setGitRepository(String gitRepository) {
    this.gitRepository = gitRepository;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec gitUrl(String gitUrl) {
    this.gitUrl = gitUrl;
    return this;
  }

   /**
   * Get gitUrl
   * @return gitUrl
  **/
  @ApiModelProperty(value = "")
  public String getGitUrl() {
    return gitUrl;
  }

  public void setGitUrl(String gitUrl) {
    this.gitUrl = gitUrl;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec lastCommitMessage(String lastCommitMessage) {
    this.lastCommitMessage = lastCommitMessage;
    return this;
  }

   /**
   * Get lastCommitMessage
   * @return lastCommitMessage
  **/
  @ApiModelProperty(value = "")
  public String getLastCommitMessage() {
    return lastCommitMessage;
  }

  public void setLastCommitMessage(String lastCommitMessage) {
    this.lastCommitMessage = lastCommitMessage;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec lastCommitSHA(String lastCommitSHA) {
    this.lastCommitSHA = lastCommitSHA;
    return this;
  }

   /**
   * Get lastCommitSHA
   * @return lastCommitSHA
  **/
  @ApiModelProperty(value = "")
  public String getLastCommitSHA() {
    return lastCommitSHA;
  }

  public void setLastCommitSHA(String lastCommitSHA) {
    this.lastCommitSHA = lastCommitSHA;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec lastCommitURL(String lastCommitURL) {
    this.lastCommitURL = lastCommitURL;
    return this;
  }

   /**
   * Get lastCommitURL
   * @return lastCommitURL
  **/
  @ApiModelProperty(value = "")
  public String getLastCommitURL() {
    return lastCommitURL;
  }

  public void setLastCommitURL(String lastCommitURL) {
    this.lastCommitURL = lastCommitURL;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec pipeline(String pipeline) {
    this.pipeline = pipeline;
    return this;
  }

   /**
   * Get pipeline
   * @return pipeline
  **/
  @ApiModelProperty(value = "")
  public String getPipeline() {
    return pipeline;
  }

  public void setPipeline(String pipeline) {
    this.pipeline = pipeline;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec postExtensions(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution> postExtensions) {
    this.postExtensions = postExtensions;
    return this;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec addPostExtensionsItem(ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution postExtensionsItem) {
    if (this.postExtensions == null) {
      this.postExtensions = new ArrayList<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution>();
    }
    this.postExtensions.add(postExtensionsItem);
    return this;
  }

   /**
   * Get postExtensions
   * @return postExtensions
  **/
  @ApiModelProperty(value = "")
  public List<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution> getPostExtensions() {
    return postExtensions;
  }

  public void setPostExtensions(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1ExtensionExecution> postExtensions) {
    this.postExtensions = postExtensions;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec releaseNotesURL(String releaseNotesURL) {
    this.releaseNotesURL = releaseNotesURL;
    return this;
  }

   /**
   * Get releaseNotesURL
   * @return releaseNotesURL
  **/
  @ApiModelProperty(value = "")
  public String getReleaseNotesURL() {
    return releaseNotesURL;
  }

  public void setReleaseNotesURL(String releaseNotesURL) {
    this.releaseNotesURL = releaseNotesURL;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec startedTimestamp(OffsetDateTime startedTimestamp) {
    this.startedTimestamp = startedTimestamp;
    return this;
  }

   /**
   * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
   * @return startedTimestamp
  **/
  @ApiModelProperty(value = "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.")
  public OffsetDateTime getStartedTimestamp() {
    return startedTimestamp;
  }

  public void setStartedTimestamp(OffsetDateTime startedTimestamp) {
    this.startedTimestamp = startedTimestamp;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec steps(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStep> steps) {
    this.steps = steps;
    return this;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec addStepsItem(ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStep stepsItem) {
    if (this.steps == null) {
      this.steps = new ArrayList<ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStep>();
    }
    this.steps.add(stepsItem);
    return this;
  }

   /**
   * Get steps
   * @return steps
  **/
  @ApiModelProperty(value = "")
  public List<ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStep> getSteps() {
    return steps;
  }

  public void setSteps(List<ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivityStep> steps) {
    this.steps = steps;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(value = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec workflow(String workflow) {
    this.workflow = workflow;
    return this;
  }

   /**
   * Get workflow
   * @return workflow
  **/
  @ApiModelProperty(value = "")
  public String getWorkflow() {
    return workflow;
  }

  public void setWorkflow(String workflow) {
    this.workflow = workflow;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec workflowMessage(String workflowMessage) {
    this.workflowMessage = workflowMessage;
    return this;
  }

   /**
   * Get workflowMessage
   * @return workflowMessage
  **/
  @ApiModelProperty(value = "")
  public String getWorkflowMessage() {
    return workflowMessage;
  }

  public void setWorkflowMessage(String workflowMessage) {
    this.workflowMessage = workflowMessage;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec workflowStatus(String workflowStatus) {
    this.workflowStatus = workflowStatus;
    return this;
  }

   /**
   * Get workflowStatus
   * @return workflowStatus
  **/
  @ApiModelProperty(value = "")
  public String getWorkflowStatus() {
    return workflowStatus;
  }

  public void setWorkflowStatus(String workflowStatus) {
    this.workflowStatus = workflowStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec = (ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec) o;
    return Objects.equals(this.attachments, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.attachments) &&
        Objects.equals(this.build, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.build) &&
        Objects.equals(this.buildLogsUrl, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.buildLogsUrl) &&
        Objects.equals(this.buildUrl, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.buildUrl) &&
        Objects.equals(this.completedTimestamp, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.completedTimestamp) &&
        Objects.equals(this.gitBranch, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.gitBranch) &&
        Objects.equals(this.gitOwner, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.gitOwner) &&
        Objects.equals(this.gitRepository, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.gitRepository) &&
        Objects.equals(this.gitUrl, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.gitUrl) &&
        Objects.equals(this.lastCommitMessage, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.lastCommitMessage) &&
        Objects.equals(this.lastCommitSHA, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.lastCommitSHA) &&
        Objects.equals(this.lastCommitURL, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.lastCommitURL) &&
        Objects.equals(this.pipeline, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.pipeline) &&
        Objects.equals(this.postExtensions, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.postExtensions) &&
        Objects.equals(this.releaseNotesURL, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.releaseNotesURL) &&
        Objects.equals(this.startedTimestamp, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.startedTimestamp) &&
        Objects.equals(this.status, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.status) &&
        Objects.equals(this.steps, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.steps) &&
        Objects.equals(this.version, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.version) &&
        Objects.equals(this.workflow, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.workflow) &&
        Objects.equals(this.workflowMessage, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.workflowMessage) &&
        Objects.equals(this.workflowStatus, comGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec.workflowStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attachments, build, buildLogsUrl, buildUrl, completedTimestamp, gitBranch, gitOwner, gitRepository, gitUrl, lastCommitMessage, lastCommitSHA, lastCommitURL, pipeline, postExtensions, releaseNotesURL, startedTimestamp, status, steps, version, workflow, workflowMessage, workflowStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubJenkinsXJxPkgApisJenkinsIoV1PipelineActivitySpec {\n");
    
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    build: ").append(toIndentedString(build)).append("\n");
    sb.append("    buildLogsUrl: ").append(toIndentedString(buildLogsUrl)).append("\n");
    sb.append("    buildUrl: ").append(toIndentedString(buildUrl)).append("\n");
    sb.append("    completedTimestamp: ").append(toIndentedString(completedTimestamp)).append("\n");
    sb.append("    gitBranch: ").append(toIndentedString(gitBranch)).append("\n");
    sb.append("    gitOwner: ").append(toIndentedString(gitOwner)).append("\n");
    sb.append("    gitRepository: ").append(toIndentedString(gitRepository)).append("\n");
    sb.append("    gitUrl: ").append(toIndentedString(gitUrl)).append("\n");
    sb.append("    lastCommitMessage: ").append(toIndentedString(lastCommitMessage)).append("\n");
    sb.append("    lastCommitSHA: ").append(toIndentedString(lastCommitSHA)).append("\n");
    sb.append("    lastCommitURL: ").append(toIndentedString(lastCommitURL)).append("\n");
    sb.append("    pipeline: ").append(toIndentedString(pipeline)).append("\n");
    sb.append("    postExtensions: ").append(toIndentedString(postExtensions)).append("\n");
    sb.append("    releaseNotesURL: ").append(toIndentedString(releaseNotesURL)).append("\n");
    sb.append("    startedTimestamp: ").append(toIndentedString(startedTimestamp)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    workflow: ").append(toIndentedString(workflow)).append("\n");
    sb.append("    workflowMessage: ").append(toIndentedString(workflowMessage)).append("\n");
    sb.append("    workflowStatus: ").append(toIndentedString(workflowStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

