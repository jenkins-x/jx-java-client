/*
 * Jenkins X
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails;

/**
 * CommitSummary is the summary of a commit
 */
@ApiModel(description = "CommitSummary is the summary of a commit")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-03-28T12:38:15.775957Z[Europe/London]")
public class ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary {
  public static final String SERIALIZED_NAME_AUTHOR = "author";
  @SerializedName(SERIALIZED_NAME_AUTHOR)
  private ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails author = null;

  public static final String SERIALIZED_NAME_BRANCH = "branch";
  @SerializedName(SERIALIZED_NAME_BRANCH)
  private String branch;

  public static final String SERIALIZED_NAME_COMMITTER = "committer";
  @SerializedName(SERIALIZED_NAME_COMMITTER)
  private ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails committer = null;

  public static final String SERIALIZED_NAME_ISSUE_IDS = "issueIds";
  @SerializedName(SERIALIZED_NAME_ISSUE_IDS)
  private List<String> issueIds = null;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_SHA = "sha";
  @SerializedName(SERIALIZED_NAME_SHA)
  private String sha;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary author(ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails author) {
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @ApiModelProperty(value = "")
  public ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails getAuthor() {
    return author;
  }

  public void setAuthor(ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails author) {
    this.author = author;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary branch(String branch) {
    this.branch = branch;
    return this;
  }

   /**
   * Get branch
   * @return branch
  **/
  @ApiModelProperty(value = "")
  public String getBranch() {
    return branch;
  }

  public void setBranch(String branch) {
    this.branch = branch;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary committer(ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails committer) {
    this.committer = committer;
    return this;
  }

   /**
   * Get committer
   * @return committer
  **/
  @ApiModelProperty(value = "")
  public ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails getCommitter() {
    return committer;
  }

  public void setCommitter(ComGithubJenkinsXJxPkgApisJenkinsIoV1UserDetails committer) {
    this.committer = committer;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary issueIds(List<String> issueIds) {
    this.issueIds = issueIds;
    return this;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary addIssueIdsItem(String issueIdsItem) {
    if (this.issueIds == null) {
      this.issueIds = new ArrayList<String>();
    }
    this.issueIds.add(issueIdsItem);
    return this;
  }

   /**
   * Get issueIds
   * @return issueIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getIssueIds() {
    return issueIds;
  }

  public void setIssueIds(List<String> issueIds) {
    this.issueIds = issueIds;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @ApiModelProperty(value = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary sha(String sha) {
    this.sha = sha;
    return this;
  }

   /**
   * Get sha
   * @return sha
  **/
  @ApiModelProperty(value = "")
  public String getSha() {
    return sha;
  }

  public void setSha(String sha) {
    this.sha = sha;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(value = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary comGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary = (ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary) o;
    return Objects.equals(this.author, comGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary.author) &&
        Objects.equals(this.branch, comGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary.branch) &&
        Objects.equals(this.committer, comGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary.committer) &&
        Objects.equals(this.issueIds, comGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary.issueIds) &&
        Objects.equals(this.message, comGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary.message) &&
        Objects.equals(this.sha, comGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary.sha) &&
        Objects.equals(this.url, comGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(author, branch, committer, issueIds, message, sha, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubJenkinsXJxPkgApisJenkinsIoV1CommitSummary {\n");
    
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    committer: ").append(toIndentedString(committer)).append("\n");
    sb.append("    issueIds: ").append(toIndentedString(issueIds)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    sha: ").append(toIndentedString(sha)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

