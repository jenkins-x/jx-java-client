/*
 * Jenkins X
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * QuickStartLocation
 */
@ApiModel(description = "QuickStartLocation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-03-28T12:38:15.775957Z[Europe/London]")
public class ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation {
  public static final String SERIALIZED_NAME_EXCLUDES = "excludes";
  @SerializedName(SERIALIZED_NAME_EXCLUDES)
  private List<String> excludes = null;

  public static final String SERIALIZED_NAME_GIT_KIND = "gitKind";
  @SerializedName(SERIALIZED_NAME_GIT_KIND)
  private String gitKind;

  public static final String SERIALIZED_NAME_GIT_URL = "gitUrl";
  @SerializedName(SERIALIZED_NAME_GIT_URL)
  private String gitUrl;

  public static final String SERIALIZED_NAME_INCLUDES = "includes";
  @SerializedName(SERIALIZED_NAME_INCLUDES)
  private List<String> includes = null;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private String owner;

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation excludes(List<String> excludes) {
    this.excludes = excludes;
    return this;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation addExcludesItem(String excludesItem) {
    if (this.excludes == null) {
      this.excludes = new ArrayList<String>();
    }
    this.excludes.add(excludesItem);
    return this;
  }

   /**
   * Get excludes
   * @return excludes
  **/
  @ApiModelProperty(value = "")
  public List<String> getExcludes() {
    return excludes;
  }

  public void setExcludes(List<String> excludes) {
    this.excludes = excludes;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation gitKind(String gitKind) {
    this.gitKind = gitKind;
    return this;
  }

   /**
   * Get gitKind
   * @return gitKind
  **/
  @ApiModelProperty(value = "")
  public String getGitKind() {
    return gitKind;
  }

  public void setGitKind(String gitKind) {
    this.gitKind = gitKind;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation gitUrl(String gitUrl) {
    this.gitUrl = gitUrl;
    return this;
  }

   /**
   * Get gitUrl
   * @return gitUrl
  **/
  @ApiModelProperty(value = "")
  public String getGitUrl() {
    return gitUrl;
  }

  public void setGitUrl(String gitUrl) {
    this.gitUrl = gitUrl;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation includes(List<String> includes) {
    this.includes = includes;
    return this;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation addIncludesItem(String includesItem) {
    if (this.includes == null) {
      this.includes = new ArrayList<String>();
    }
    this.includes.add(includesItem);
    return this;
  }

   /**
   * Get includes
   * @return includes
  **/
  @ApiModelProperty(value = "")
  public List<String> getIncludes() {
    return includes;
  }

  public void setIncludes(List<String> includes) {
    this.includes = includes;
  }

  public ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(value = "")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation comGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation = (ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation) o;
    return Objects.equals(this.excludes, comGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation.excludes) &&
        Objects.equals(this.gitKind, comGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation.gitKind) &&
        Objects.equals(this.gitUrl, comGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation.gitUrl) &&
        Objects.equals(this.includes, comGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation.includes) &&
        Objects.equals(this.owner, comGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation.owner);
  }

  @Override
  public int hashCode() {
    return Objects.hash(excludes, gitKind, gitUrl, includes, owner);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubJenkinsXJxPkgApisJenkinsIoV1QuickStartLocation {\n");
    
    sb.append("    excludes: ").append(toIndentedString(excludes)).append("\n");
    sb.append("    gitKind: ").append(toIndentedString(gitKind)).append("\n");
    sb.append("    gitUrl: ").append(toIndentedString(gitUrl)).append("\n");
    sb.append("    includes: ").append(toIndentedString(includes)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

